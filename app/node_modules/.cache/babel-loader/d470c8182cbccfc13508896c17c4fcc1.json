{"ast":null,"code":"var _jsxFileName = \"/Users/luisjesuscastillo/Desktop/bootcamp/monorepo/app/src/pages/Notes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Note from '../components/Note';\nimport { updateNote } from '../services/note';\nimport { completeNote, fetchNotes, isLoadingNote, toggleImportant } from '../redux/slices/note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notes = _ref => {\n  _s();\n\n  let {\n    setNotes\n  } = _ref;\n  const dispatch = useDispatch();\n  const isLoading = useSelector(isLoadingNote);\n  const notes = useSelector(completeNote);\n  const [showAll, setShowAll] = useState(true);\n\n  const handleToggleImporntant = async id => {\n    const note = notes.find(n => n.id === id);\n    const changeNote = { ...note,\n      important: !note.important\n    };\n    dispatch(toggleImportant(id, changeNote));\n  };\n\n  useEffect(() => {\n    dispatch(fetchNotes());\n  }, []);\n  const noteShow = showAll ? notes : notes.filter(note => note.important);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"danger\",\n      className: \"my-4\",\n      onClick: () => setShowAll(!showAll),\n      children: [\"show \", showAll ? 'important' : 'all']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      hover: true,\n      bordered: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: noteShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n          note: note,\n          handleToggle: () => handleToggleImporntant(note.id)\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Notes, \"umc1HymvUnzLGUkLY8u4Pu3NQKo=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","useDispatch","useSelector","Note","updateNote","completeNote","fetchNotes","isLoadingNote","toggleImportant","Notes","setNotes","dispatch","isLoading","notes","showAll","setShowAll","handleToggleImporntant","id","note","find","n","changeNote","important","noteShow","filter","map"],"sources":["/Users/luisjesuscastillo/Desktop/bootcamp/monorepo/app/src/pages/Notes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Note from '../components/Note';\nimport { updateNote } from '../services/note';\nimport { completeNote, fetchNotes, isLoadingNote, toggleImportant } from '../redux/slices/note';\n\nconst Notes = ({\n  setNotes\n}) => {\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(isLoadingNote);\n  const notes = useSelector(completeNote);\n  const [showAll, setShowAll] = useState(true);\n\n  const handleToggleImporntant = async (id) => {\n    const note = notes.find(n => n.id === id);\n    const changeNote = { ...note, important: !note.important };\n    dispatch(toggleImportant(id, changeNote));\n  };\n\n  useEffect(() => {\n    dispatch(fetchNotes());\n  }, []);\n\n  const noteShow = showAll\n    ? notes\n    : notes.filter(note => note.important);\n\n  return (\n    <div>\n      <Button\n        variant=\"danger\"\n        className='my-4'\n        onClick={() => setShowAll(!showAll)}\n      >show {showAll ? 'important' : 'all'}</Button>\n\n      {isLoading && <div className='text-center'>Cargando...</div>}\n      {\n        !isLoading && (<Table striped hover bordered>\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Author</th>\n              <th>Tool</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              noteShow.map(note => (\n                <Note\n                  key={note.id}\n                  note={note}\n                  handleToggle={() => handleToggleImporntant(note.id)}\n                />\n              ))\n            }\n\n          </tbody>\n        </Table>)\n      }\n    </div>\n  );\n\n};\n\nexport default Notes;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,aAAnC,EAAkDC,eAAlD,QAAyE,sBAAzE;;;AAEA,MAAMC,KAAK,GAAG,QAER;EAAA;;EAAA,IAFS;IACbC;EADa,CAET;EAEJ,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;EACA,MAAMW,SAAS,GAAGV,WAAW,CAACK,aAAD,CAA7B;EACA,MAAMM,KAAK,GAAGX,WAAW,CAACG,YAAD,CAAzB;EACA,MAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC;;EAEA,MAAMmB,sBAAsB,GAAG,MAAOC,EAAP,IAAc;IAC3C,MAAMC,IAAI,GAAGL,KAAK,CAACM,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASA,EAAzB,CAAb;IACA,MAAMI,UAAU,GAAG,EAAE,GAAGH,IAAL;MAAWI,SAAS,EAAE,CAACJ,IAAI,CAACI;IAA5B,CAAnB;IACAX,QAAQ,CAACH,eAAe,CAACS,EAAD,EAAKI,UAAL,CAAhB,CAAR;EACD,CAJD;;EAMAvB,SAAS,CAAC,MAAM;IACda,QAAQ,CAACL,UAAU,EAAX,CAAR;EACD,CAFQ,EAEN,EAFM,CAAT;EAIA,MAAMiB,QAAQ,GAAGT,OAAO,GACpBD,KADoB,GAEpBA,KAAK,CAACW,MAAN,CAAaN,IAAI,IAAIA,IAAI,CAACI,SAA1B,CAFJ;EAIA,oBACE;IAAA,wBACE,QAAC,MAAD;MACE,OAAO,EAAC,QADV;MAEE,SAAS,EAAC,MAFZ;MAGE,OAAO,EAAE,MAAMP,UAAU,CAAC,CAACD,OAAF,CAH3B;MAAA,oBAIOA,OAAO,GAAG,WAAH,GAAiB,KAJ/B;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAOGF,SAAS,iBAAI;MAAK,SAAS,EAAC,aAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPhB,EASI,CAACA,SAAD,iBAAe,QAAC,KAAD;MAAO,OAAO,MAAd;MAAe,KAAK,MAApB;MAAqB,QAAQ,MAA7B;MAAA,wBACb;QAAA,uBACE;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADa,eAQb;QAAA,UAEIW,QAAQ,CAACE,GAAT,CAAaP,IAAI,iBACf,QAAC,IAAD;UAEE,IAAI,EAAEA,IAFR;UAGE,YAAY,EAAE,MAAMF,sBAAsB,CAACE,IAAI,CAACD,EAAN;QAH5C,GACOC,IAAI,CAACD,EADZ;UAAA;UAAA;UAAA;QAAA,QADF;MAFJ;QAAA;QAAA;QAAA;MAAA,QARa;IAAA;MAAA;MAAA;MAAA;IAAA,QATnB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmCD,CA1DD;;GAAMR,K;UAIaR,W,EACCC,W,EACJA,W;;;KANVO,K;AA4DN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}