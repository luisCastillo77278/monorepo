{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { getNote } from '../../services/note';\nconst initialState = {\n  isLoading: false,\n  data: {},\n  error: {}\n};\nconst detailSlice = createSlice({\n  name: 'detail',\n  initialState,\n  reducers: {\n    fetchDetailStart(state) {\n      state.isLoading = true;\n    },\n\n    fetchDetailComplete(state, action) {\n      state.isLoading = false;\n      state.data = action.payload;\n    },\n\n    fetchDetailError(state, action) {\n      state.isLoading = false;\n      state.data = action.payload;\n    }\n\n  }\n});\nexport const {\n  fetchDetailStart,\n  fetchDetailComplete,\n  fetchDetailError\n} = detailSlice.actions;\nexport const fetchDetail = noteId => async dispatch => {\n  try {\n    dispatch(fetchDetailStart());\n    const note = await getNote(noteId);\n    dispatch(fetchDetailComplete(note));\n  } catch (error) {\n    dispatch(fetchDetailError(error));\n  }\n};\nexport default detailSlice.reducer;","map":{"version":3,"names":["createSlice","getNote","initialState","isLoading","data","error","detailSlice","name","reducers","fetchDetailStart","state","fetchDetailComplete","action","payload","fetchDetailError","actions","fetchDetail","noteId","dispatch","note","reducer"],"sources":["/Users/luisjesuscastillo/Desktop/bootcamp/monorepo/app/src/redux/slices/detail.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { getNote } from '../../services/note';\n\nconst initialState = {\n  isLoading: false,\n  data: {},\n  error: {}\n};\n\nconst detailSlice = createSlice({\n  name: 'detail',\n  initialState,\n  reducers: {\n    fetchDetailStart(state) {\n      state.isLoading = true;\n    },\n    fetchDetailComplete(state, action) {\n      state.isLoading = false;\n      state.data = action.payload;\n    },\n    fetchDetailError(state, action) {\n      state.isLoading = false;\n      state.data = action.payload;\n    }\n  }\n});\n\nexport const {\n  fetchDetailStart,\n  fetchDetailComplete,\n  fetchDetailError\n} = detailSlice.actions;\n\nexport const fetchDetail = (noteId) => async (dispatch) => {\n  try {\n    dispatch(fetchDetailStart());\n    const note = await getNote(noteId);\n    dispatch(fetchDetailComplete(note));\n  } catch (error) {\n    dispatch(fetchDetailError(error));\n  }\n};\n\nexport default detailSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AAEA,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,KADQ;EAEnBC,IAAI,EAAE,EAFa;EAGnBC,KAAK,EAAE;AAHY,CAArB;AAMA,MAAMC,WAAW,GAAGN,WAAW,CAAC;EAC9BO,IAAI,EAAE,QADwB;EAE9BL,YAF8B;EAG9BM,QAAQ,EAAE;IACRC,gBAAgB,CAACC,KAAD,EAAQ;MACtBA,KAAK,CAACP,SAAN,GAAkB,IAAlB;IACD,CAHO;;IAIRQ,mBAAmB,CAACD,KAAD,EAAQE,MAAR,EAAgB;MACjCF,KAAK,CAACP,SAAN,GAAkB,KAAlB;MACAO,KAAK,CAACN,IAAN,GAAaQ,MAAM,CAACC,OAApB;IACD,CAPO;;IAQRC,gBAAgB,CAACJ,KAAD,EAAQE,MAAR,EAAgB;MAC9BF,KAAK,CAACP,SAAN,GAAkB,KAAlB;MACAO,KAAK,CAACN,IAAN,GAAaQ,MAAM,CAACC,OAApB;IACD;;EAXO;AAHoB,CAAD,CAA/B;AAkBA,OAAO,MAAM;EACXJ,gBADW;EAEXE,mBAFW;EAGXG;AAHW,IAITR,WAAW,CAACS,OAJT;AAMP,OAAO,MAAMC,WAAW,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;EACzD,IAAI;IACFA,QAAQ,CAACT,gBAAgB,EAAjB,CAAR;IACA,MAAMU,IAAI,GAAG,MAAMlB,OAAO,CAACgB,MAAD,CAA1B;IACAC,QAAQ,CAACP,mBAAmB,CAACQ,IAAD,CAApB,CAAR;EACD,CAJD,CAIE,OAAOd,KAAP,EAAc;IACda,QAAQ,CAACJ,gBAAgB,CAACT,KAAD,CAAjB,CAAR;EACD;AACF,CARM;AAUP,eAAeC,WAAW,CAACc,OAA3B"},"metadata":{},"sourceType":"module"}