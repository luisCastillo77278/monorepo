{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { getNotes, updateNote, createNote } from '../../services/note';\nconst initialState = {\n  isLoading: false,\n  data: [],\n  error: {}\n};\nconst noteSlice = createSlice({\n  name: 'notes',\n  initialState,\n  reducers: {\n    fetchNoteStart(state) {\n      state.isLoading = true;\n    },\n\n    fetchNotesComplete(state, action) {\n      state.isLoading = false;\n      state.data = action.payload;\n    },\n\n    fetchToggleImportant(state, action) {\n      state.data = state.data.map(n => n.id !== action.payload.id ? n : action.payload);\n    },\n\n    fetchAddNotes(state, action) {\n      state.data = [action.payload, ...state.data];\n    },\n\n    fetchNoteError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n\n    fetchFilterNote(state, action) {\n      state.data = action.payload ? [...state.data] : state.data.filter(note => note.impotant);\n    }\n\n  }\n});\nexport const {\n  fetchNoteStart,\n  fetchNotesComplete,\n  fetchNoteError,\n  fetchToggleImportant,\n  fetchAddNotes\n} = noteSlice.actions; // caction creator\n\nexport const fetchNotes = () => async dispatch => {\n  try {\n    dispatch(fetchNoteStart());\n    const notes = await getNotes();\n    dispatch(fetchNotesComplete(notes));\n  } catch (error) {\n    dispatch(fetchNoteError(error));\n  }\n};\nexport const toggleImportant = changeNote => async dispatch => {\n  try {\n    const {\n      response,\n      user\n    } = await updateNote(changeNote.id, changeNote);\n    dispatch(fetchToggleImportant({ ...response,\n      user\n    }));\n  } catch (error) {\n    dispatch(fetchNoteError(error));\n  }\n};\nexport const fetchDataAdd = newNote => async dispatch => {\n  try {\n    const note = await createNote(newNote);\n    dispatch(fetchAddNotes(note));\n  } catch (error) {\n    dispatch(fetchNoteError(error));\n  }\n};\nexport const isLoadingNote = state => state.notes.isLoading;\nexport const completeNote = state => state.notes.data;\nexport const errorNote = state => state.notes.error;\nexport default noteSlice.reducer;","map":{"version":3,"names":["createSlice","getNotes","updateNote","createNote","initialState","isLoading","data","error","noteSlice","name","reducers","fetchNoteStart","state","fetchNotesComplete","action","payload","fetchToggleImportant","map","n","id","fetchAddNotes","fetchNoteError","fetchFilterNote","filter","note","impotant","actions","fetchNotes","dispatch","notes","toggleImportant","changeNote","response","user","fetchDataAdd","newNote","isLoadingNote","completeNote","errorNote","reducer"],"sources":["/Users/luisjesuscastillo/Desktop/bootcamp/monorepo/app/src/redux/slices/note.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { getNotes, updateNote, createNote } from '../../services/note';\n\nconst initialState = {\n  isLoading: false,\n  data: [],\n  error: {}\n};\n\nconst noteSlice = createSlice({\n  name: 'notes',\n  initialState,\n  reducers: {\n    fetchNoteStart(state) {\n      state.isLoading = true;\n    },\n    fetchNotesComplete(state, action) {\n      state.isLoading = false;\n      state.data = action.payload;\n    },\n    fetchToggleImportant(state, action) {\n      state.data = state.data.map((n => n.id !== action.payload.id ? n : action.payload));\n    },\n    fetchAddNotes(state, action) {\n      state.data = [action.payload, ...state.data];\n    },\n    fetchNoteError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    fetchFilterNote(state, action) {\n      state.data = action.payload ? [...state.data] : state.data.filter(note => note.impotant);\n    }\n  }\n});\n\n\nexport const {\n  fetchNoteStart,\n  fetchNotesComplete,\n  fetchNoteError,\n  fetchToggleImportant,\n  fetchAddNotes\n} = noteSlice.actions;\n\n// caction creator\nexport const fetchNotes = () => async (dispatch) => {\n  try {\n    dispatch(fetchNoteStart());\n    const notes = await getNotes();\n    dispatch(fetchNotesComplete(notes));\n  } catch (error) {\n    dispatch(fetchNoteError(error));\n  }\n};\n\nexport const toggleImportant = (changeNote) => async (dispatch) => {\n  try {\n    const { response, user } = await updateNote(changeNote.id, changeNote);\n    dispatch(fetchToggleImportant({ ...response, user }));\n  } catch (error) {\n    dispatch(fetchNoteError(error));\n  }\n};\n\nexport const fetchDataAdd = (newNote) => async (dispatch) => {\n  try {\n    const note = await createNote(newNote);\n    dispatch(fetchAddNotes(note));\n  } catch (error) {\n    dispatch(fetchNoteError(error));\n  }\n};\n\nexport const isLoadingNote = state => state.notes.isLoading;\nexport const completeNote = state => state.notes.data;\nexport const errorNote = state => state.notes.error;\n\nexport default noteSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}